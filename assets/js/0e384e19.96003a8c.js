"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[671],{9881:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={},l="API Usage",s={unversionedId:"intro",id:"intro",title:"API Usage",description:"The reduced.to URL Shortener API allows you to shorten long URLs into shorter, more manageable ones. This documentation provides details on how to use the API effectively.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/intro",draft:!1,editUrl:"/docs/intro.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar"},i={},p=[{value:"API Base URL",id:"api-base-url",level:2},{value:"API Usage",id:"api-usage-1",level:2},{value:"Javascript Example",id:"javascript-example",level:2}],h={toc:p},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"api-usage"},"API Usage"),(0,a.kt)("p",null,"The reduced.to URL Shortener API allows you to shorten long URLs into shorter, more manageable ones. This documentation provides details on how to use the API effectively."),(0,a.kt)("h2",{id:"api-base-url"},"API Base URL"),(0,a.kt)("p",null,"The base URL for the API is ",(0,a.kt)("inlineCode",{parentName:"p"},"https://reduced.to/api/v1/shortener"),"."),(0,a.kt)("h2",{id:"api-usage-1"},"API Usage"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Method"),(0,a.kt)("th",{parentName:"tr",align:null},"Endpoint"),(0,a.kt)("th",{parentName:"tr",align:null},"Content-Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Request Body"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"POST"),(0,a.kt)("td",{parentName:"tr",align:null},"/api/v1/shortener"),(0,a.kt)("td",{parentName:"tr",align:null},"application/json"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},'{"originalUrl": "https://google.com"}')),(0,a.kt)("td",{parentName:"tr",align:null},"Shortens a URL and returns the result.")))),(0,a.kt)("p",null,"To shorten a URL, make a ",(0,a.kt)("inlineCode",{parentName:"p"},"POST")," request to the base URL with the following JSON payload:"),(0,a.kt)("p",null,"POST /api/v1/shortener\nContent-Type: application/json"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "originalUrl": "https://google.com"\n}\n')),(0,a.kt)("p",null,"Upon successful execution of the request, you will receive a JSON response containing the shortened URL. The response object will have the following structure:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "newUrl": "vv9ip"\n}\n')),(0,a.kt)("h2",{id:"javascript-example"},"Javascript Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// Define the API endpoint\nconst url = 'https://reduced.to/api/v1/shortener';\n\n// Define the original URL to be shortened\nconst originalUrl = 'https://google.com';\n\n// Create the request payload\nconst payload = {\n  originalUrl: originalUrl,\n};\n\n// Send the POST request to shorten the URL\nfetch(url, {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify(payload),\n})\n  .then((response) => response.json())\n  .then((data) => {\n    // Extract the shortened URL from the response\n    const shortenedUrl = data.newUrl;\n\n    // Print the shortened URL\n    console.log(`Shortened URL: https://reduced.to/${shortenedUrl}`);\n  })\n  .catch((error) => {\n    console.error('Error:', error.message);\n  });\n")),(0,a.kt)("h1",{id:"python-example"},"Python Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"import requests\nimport json\n\n# Define the API endpoint\nurl = 'https://reduced.to/api/v1/shortener'\n\n# Define the original URL to be shortened\noriginal_url = 'https://google.com'\n\n# Create the request payload\npayload = {\n    'originalUrl': original_url\n}\n\n# Send the POST request to shorten the URL\nresponse = requests.post(url, json=payload)\n\n# Extract the shortened URL from the response\nshortened_url = response.json()['newUrl']\n\n# Print the shortened URL\nprint(f'Shortened URL: https://reduced.to/{shortened_url}')\n")))}u.isMDXComponent=!0}}]);